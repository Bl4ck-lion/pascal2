---
import { optimizeImage } from "../assets/ts/util/image";
import { getImage } from "astro:assets";
import profilePictureDefault from "../assets/.original/export.png";

// Edge browsers doesn't support avif format yet.
const imageFormat = Astro.request.headers.get("user-agent")?.includes("Edg") ? "webp" : "avif";

export interface Props {
	fromMe: boolean;
	remoteJid: string;
	id: string;
	message: {
		conversation?: string;
		extendedTextMessage?: {
			text?: string;
		};
	};
	timestamp: number;
	pushName: string | null;
	profilePicture: string | null;
	userReceipt: string | null;
	ack?: number | null;
}
const { fromMe, remoteJid, id, message, timestamp, pushName, profilePicture, userReceipt, ack } = Astro.props;

const profilePictureOptimized = profilePicture
	? await optimizeImage(profilePicture, imageFormat, 80, 80)
	: (await getImage({ src: profilePictureDefault, format: imageFormat, width: 80, height: 80 })).src;

let bubbleColor = "chat-bubble-secondary";
let messageAck = null;
switch (ack) {
	case 0:
		bubbleColor = "chat-bubble-error";
		messageAck = "Error";
		break;
	case 4:
		messageAck = "Read";
		break;
	case 5:
		messageAck = "Played";
		break;
    default:
		messageAck = "Sent";
		break;
}
---

<div class=`flex min-w-full ${fromMe ? "justify-end" : "justify-start"}`>
	<div class=`chat ${fromMe ? "chat-end" : "chat-start"}`>
		<div class="chat-image avatar">
			<div class="w-8 rounded-full">
				<img src={profilePictureOptimized} />
			</div>
		</div>
		<div class=`chat-header flex py-1 ${fromMe ? "flex-row-reverse" :""}`>
			{pushName || remoteJid.match(/^[0-9]*/)}
			<time class="text-xs opacity-50 px-2 self-end">
				{
					new Date(timestamp * 1000).toLocaleTimeString("en-US", {
						hour: "2-digit",
						minute: "2-digit",
					})
				}
			</time>
		</div>
		<div class=`chat-bubble flex flex-col min-w-fit ${bubbleColor}`>
			{message.conversation || message.extendedTextMessage?.text}
			{fromMe ? <div class="chat-footer opacity-50 self-end">{messageAck}</div> : ""}
		</div>
	</div>
</div>
