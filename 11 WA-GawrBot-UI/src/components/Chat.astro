---
import { Icon } from "astro-icon";
import { getImage } from "astro:assets";
import profilePictureDefault from "../assets/.original/export.png";
import sharp from "sharp";

export interface Props {
	latestMessageTimestamp: number;
	latestMessage: string;
	username: string;
	profilePicture?: string;
	isPinned: boolean;
	isArchived: boolean;
}
const { latestMessageTimestamp, latestMessage, profilePicture, username, isPinned, isArchived } = Astro.props;

const profilePictureOptimized = profilePicture
	? await sharp(await (await fetch(profilePicture)).arrayBuffer())
			.resize({
				width: 80,
				height: 80,
				fit: sharp.fit.cover,
			})
			.toFormat("avif")
			.toBuffer()
			.then((data) => {
				return `data:image/avif;base64,${data.toString("base64")}`;
			})
	: (await getImage({src: profilePictureDefault, format: "avif", width: 80, height: 80})).src;
---

<div class="flex flex-row p-2 transition-colors hover:bg-base-content/25 rounded-md max-lg:flex-1 max-h-min">
	<div class="w-14 h-14 p-1 mr-3">
		{
			profilePicture ? (
				<img class="w-full h-full rounded-full object-cover" src={profilePictureOptimized} alt={username} width="80" height="80" fetchpriority="high" loading="eager" />
			) : (
				<img class="w-full h-full rounded-full object-cover" src={profilePictureOptimized} alt={username} width="80" height="80" fetchpriority="high" loading="eager" />
			)
		}
	</div>
	<div class="flex flex-1 flex-col">
		<div class="flex">
			<span class="flex flex-1 font-bold">
				{username}
			</span>
			<span class="flex self-center text-xs ml-1.5">
				{
					new Date(latestMessageTimestamp * 1000).toLocaleDateString("en-US", {
						day: "2-digit",
						month: "2-digit",
						year: "numeric",
					})
				}
			</span>
		</div>
		<div class="flex">
			<div class="flex flex-1 h-full self-center">
				{latestMessage}
			</div>
			<span class="flex h-full">
				{isPinned ? <Icon name="ph:push-pin-fill" class="h-4 w-4 flex self-center" /> : ""}
				{isArchived ? <Icon name="ph:archive-fill" class="h-4 w-4 flex self-center" /> : ""}
			</span>
		</div>
	</div>
</div>
